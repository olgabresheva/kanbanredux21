{"version":3,"sources":["redux/actions.js","components/TaskCreateForm.js","components/Task.js","components/Board.js","components/App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["getTasks","dispatch","axios","url","method","then","res","type","payload","data","catch","error","console","log","getColumns","response","connect","onTaskCreate","taskName","taskDescription","priority","name","description","onColumnCreate","colTitle","colStatus","title","status","props","useEffect","useState","setTaskName","setTaskDescription","setPriority","addBtnDisabled","setAddBtnDisabled","openTaskForm","setOpenTaskForm","openColumnform","setOpenColumnform","columnTitle","setColumnTitle","columnStatus","setColumnStatus","className","onClick","placeholder","value","onChange","e","target","required","disabled","preventDefault","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","leftBtn","rightBtn","downBtn","upBtn","editBtn","Task","editMode","setEditMode","taskNewName","setTaskNewName","taskNewDescr","setTaskNewDescr","show","setShow","handleClose","taskDelete","taskId","onPriorityChg","id","direction","p","taskPriority","taskPriorityChg","onStateChg","i","boardState","findIndex","taskStatus","taskStateChg","1","2","3","lines","more","less","Modal","onHide","Body","Footer","Button","taskEdit","boardList","length","state","taskList","tasks","boardStatus","newName","newDescription","colDelete","onColDelete","colId","Alert","variant","onClose","dismissible","filter","el","sort","a","b","map","key","_id","Boolean","window","location","hostname","match","initialState","columns","task","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ff369e34.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport function getTasks() {\n    return (dispatch) => {\n        axios({\n            url: 'https://kanban-app-trial.herokuapp.com/card',\n            method: 'GET'\n        })\n            .then(res => {\n                dispatch({\n                    type: 'GET_TASKS', payload: res.data\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function onTaskCreate(name, description, priority) {\n    return (dispatch) => {\n        axios({\n            url: 'https://kanban-app-trial.herokuapp.com/card',\n            method: 'POST',\n            data: {name, description, priority}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function taskDelete(id) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'DELETE'\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function taskEdit(id, newName, newDescription) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {name: newName, description: newDescription}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function taskPriorityChg(id, priority) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {priority: priority}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function taskStateChg(id, status) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {status: status}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function getColumns() {\n    return (dispatch) => {\n        axios({\n            url: \"https://kanban-app-trial.herokuapp.com/column\",\n            method: 'GET'\n        })\n            .then(response => {\n                dispatch({\n                    type: \"GET_COLUMNS\",\n                    payload: response.data\n                })\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function onColumnCreate(colTitle, colStatus) {\n    return (dispatch) => {\n        axios({\n            url: \"https://kanban-app-trial.herokuapp.com/column\",\n            method: 'POST',\n            data: {title: colTitle, status: colStatus}\n        })\n            .then(res => {\n                dispatch(getColumns())\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function colDelete(id) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/column/${id}`,\n            method: 'DELETE'\n        })\n            .then(res => {\n                dispatch(getColumns())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}","import React, {useEffect, useState} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport {getTasks, onColumnCreate, onTaskCreate} from '../redux/actions';\n\nfunction TaskCreateForm(props) {\n\n    useEffect(() => {\n        getTasks()\n    }, []);\n\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [priority, setPriority] = useState('Select Priority');\n    const [addBtnDisabled, setAddBtnDisabled] = useState(true);\n    const [openTaskForm, setOpenTaskForm] = useState(false);\n    const [openColumnform, setOpenColumnform] = useState(false);\n    const [columnTitle, setColumnTitle] = useState('');\n    const [columnStatus, setColumnStatus] = useState('')\n\n\n    const taskPriorityInput = (e) => {\n        setPriority(e.target.value);\n        if (priority !== '0') {\n            setAddBtnDisabled(false)\n        } else setAddBtnDisabled(true);\n    }\n\n    const taskCreate = (e) => {\n        e.preventDefault();\n        props.onTaskCreate(taskName, taskDescription, priority);\n        setOpenTaskForm(false);\n        setTaskName('');\n        setTaskDescription('');\n        setAddBtnDisabled(true)\n    }\n\n    const onTaskCreateCancel = () => {\n        setTaskName('');\n        setTaskDescription('');\n        setPriority('Select Priority');\n        setAddBtnDisabled(true);\n        setOpenTaskForm(false);\n    }\n\n    const createNewColumn = (e) => {\n        e.preventDefault();\n        props.onColumnCreate(columnTitle, columnStatus);\n        setColumnTitle('');\n        setColumnStatus('');\n        setOpenColumnform(false);\n\n    }\n\n    const onColCreateCancel = () => {\n        setColumnTitle('');\n        setColumnStatus('');\n        setOpenColumnform(false);\n    }\n\n    return (\n        <div className=\"TaskCreateForm\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <button type=\"submit\" className=\"btn btn-info create\" onClick={() => setOpenTaskForm(true)}>\n                        Create New Task\n                    </button>\n                    <p/>\n\n                    {openTaskForm &&\n                    <form>\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={'Enter Take Name'}\n                                           value={taskName}\n                                           onChange={e => setTaskName(e.target.value)}/>\n                                </div>\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={'Enter Task Description'}\n                                           value={taskDescription}\n                                           onChange={e => setTaskDescription(e.target.value)}/>\n                                </div>\n                            </div>\n                            <p/>\n                            <select className=\"custom-select\" onChange={taskPriorityInput} required>\n                                <option value=\"0\">Select Priority</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                            </select>\n                            <p/>\n                            <button disabled={addBtnDisabled} type=\"submit\" className=\"btn btn-outline-info\"\n                                    onClick={taskCreate}>Add Task\n                            </button>\n                            <button type=\"button\" className=\"btn btn-outline-secondary\"\n                                    onClick={onTaskCreateCancel}>Cancel\n                            </button>\n                        </div>\n                    </form>\n                    }\n                </div>\n                <div className=\"col\">\n                    <button type=\"submit\" className=\"btn btn-info create\" onClick={() => setOpenColumnform(true)}>\n                        Add New Column\n                    </button>\n                    <p/>\n                    {openColumnform &&\n                    <form>\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={'Enter Column Title'}\n                                           value={columnTitle} onChange={e => setColumnTitle(e.target.value)}/>\n                                </div>\n                                <p/>\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={'Enter Column Status'}\n                                           value={columnStatus} onChange={e => setColumnStatus(e.target.value)}/>\n                                </div>\n                            </div>\n                            <p/>\n                            <button type=\"submit\" className=\"btn btn-outline-info\" onClick={createNewColumn}>Create</button>\n                            <button type=\"submit\" className=\"btn btn-outline-secondary\" onClick={onColCreateCancel}>Cancel</button>\n                        </div>\n                    </form>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getTasks: () => dispatch(getTasks()),\n    onTaskCreate: (taskName, taskDescription, priority) => dispatch(onTaskCreate(taskName, taskDescription, priority)),\n    onColumnCreate: (colTitle, colStatus) => dispatch(onColumnCreate(colTitle, colStatus))\n\n})\n\nexport default connect(null, mapDispatchToProps)(TaskCreateForm);\n","import React, {useState} from 'react';\nimport '../App.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ShowMoreText from 'react-show-more-text';\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst leftBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-left-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\n    </svg>);\n\nconst rightBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\n    </svg>);\n\n\nconst downBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n</svg>);\n\nconst upBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-up\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n</svg>);\n\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nfunction Task(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [taskNewName, setTaskNewName] = useState(props.taskName);\n    const [taskNewDescr, setTaskNewDescr] = useState(props.taskDescription);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        props.taskDelete(props.taskId);\n        setShow(false);\n    }\n\n    const onTaskSave = () => {\n        props.taskEdit(props.taskId, taskNewName, taskNewDescr);\n        setEditMode(false);\n    }\n\n    const onPriorityChg = (id, direction) => {\n        let p;\n        direction === 'up' ? p = props.taskPriority - 1 : p = props.taskPriority + 1\n        props.taskPriorityChg(id, p)\n    }\n\n    const onStateChg = (id, direction) => {\n        let status;\n        let i;\n        i = props.boardState.findIndex(e => e.title === props.taskStatus);\n        direction === 'right' ? status = props.boardState[i + 1].title : status = props.boardState[i - 1].title\n        props.taskStateChg(id, status)\n    }\n\n    const priorityBadge = {\n        1: \"badge badge-danger\",\n        2: \"badge badge-warning\",\n        3: \"badge badge-success\"\n    };\n\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                <span className=\"priority\">\n                    {props.taskPriority < 3 &&\n                    <span onClick={() => onPriorityChg(props.taskId, 'down')}>{downBtn}</span>}\n                    {props.taskPriority > 1 &&\n                    <span onClick={() => onPriorityChg(props.taskId, 'up')}>{upBtn}</span>}\n                </span>\n                    <span className={priorityBadge[props.taskPriority]}>Priority: {props.taskPriority}</span>\n\n                </div>\n                <div className=\"card-body\">\n                    <h6 className=\"card-title\">{props.taskName}:</h6>\n                    <ShowMoreText className=\"card-title small\"\n                                  lines={1}\n                                  more='Show more'\n                                  less='Show less'>\n                        {props.taskDescription}</ShowMoreText>\n\n                </div>\n                <div className=\"card-footer bg-transparent text-muted border-0\">\n                <span className=\"float-left\">\n                <span onClick={() => setEditMode(true)}>{editBtn}</span>\n                    <span onClick={() => setShow(true)}>{deleteBtn}</span>\n                    </span>\n                    {editMode &&\n                    <>\n                        <Modal show={editMode} onHide={handleClose}>\n                            <Modal.Body>\n                                <p><strong>Task Name:</strong></p>\n                                <input className=\"mytext\" type=\"text\" value={taskNewName}\n                                       onChange={e => setTaskNewName(e.target.value)}/><br/>\n                                <p/>\n                                <p><strong>Task Description:</strong></p>\n                                <input className=\"mytext\" type=\"text\" value={taskNewDescr}\n                                       onChange={e => setTaskNewDescr(e.target.value)}/><br/>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\"\n                                        onClick={() => setEditMode(false)}>Cancel</Button>\n                                <Button type=\"button\" className=\"btn btn-primary btn-sm\"\n                                        onClick={onTaskSave}>Save</Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </>}\n                    {show &&\n                    <>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Body>Please confirm if you want to delete this task</Modal.Body>\n                            <Modal.Footer>\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\"\n                                        onClick={() => setShow(false)}>Cancel</Button>\n                                <Button type=\"button\" className=\"btn btn-primary btn-sm\"\n                                        onClick={handleClose}>Confirm</Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </>\n                    }\n                    <span className=\"float-right\">\n                {(props.taskStatus !== 'To Do') &&\n                <span onClick={() => onStateChg(props.taskId, \"left\")}>{leftBtn}</span>}\n                        {props.taskStatus !== props.boardList[props.boardList.length -1].title &&\n                        <span onClick={() => onStateChg(props.taskId, \"right\")}>{rightBtn}</span>}\n                </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Task;\n","import React, {useEffect, useState} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport Task from './Task';\nimport {getTasks, taskDelete, taskEdit, taskPriorityChg, taskStateChg, colDelete} from '../redux/actions';\nimport Alert from \"react-bootstrap/Alert\";\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nfunction Board(props) {\n\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        props.getTasks()\n    }, []);\n\n    const onColDelete = (colStatus, id) => {\n        for (let i = 0; i <= props.taskList.length - 1; i++) {\n            if (props.taskList[i].status === colStatus) {\n                return setShow(true);\n            }\n        }\n        props.colDelete(id);\n    }\n\n    return (\n        <span className=\"col-sm\">\n            <div className=\"card-header\">\n                {props.columnStatus}\n                <span className=\"float-right\">\n                {(props.columnStatus !== \"To Do\"\n                    && props.columnStatus !== \"In Progress\"\n                    && props.columnStatus !== \"Review\"\n                    && props.columnStatus !== \"Done\")\n                && <span onClick={() => onColDelete(props.columnStatus, props.colId)}>{deleteBtn}</span>}\n                </span>\n            </div>\n\n            <p/>\n\n            {show &&\n            <>\n                <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <p>\n                        Please make sure there are no tasks associated with column you wish to delete.\n                    </p>\n                </Alert>\n            </>}\n\n            {props.taskList.filter(el => el.status === props.columnStatus)\n                .sort(function (a, b) {\n                    return a.priority - b.priority\n                })\n                .map(el => <li key={el._id}>\n                    <Task taskName={el.name}\n                          taskDescription={el.description}\n                          taskPriority={el.priority}\n                          taskStatus={el.status}\n                          taskId={el._id}\n                          boardList={props.boardState}\n                          boardState={props.boardState}\n                          taskDelete={props.taskDelete}\n                          taskStateChg={props.taskStateChg}\n                          taskPriorityChg={props.taskPriorityChg}\n                          taskEdit={props.taskEdit}\n                    />\n                </li>)}\n        </span>\n    );\n}\n\nconst mapStateToProps = state => ({\n    taskList: state.tasks,\n    boardState: state.boardStatus,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getTasks: () => dispatch(getTasks()),\n    taskDelete: (id) => dispatch(taskDelete(id)),\n    taskEdit: (id, newName, newDescription) => dispatch(taskEdit(id, newName, newDescription)),\n    taskPriorityChg: (id, priority) => dispatch(taskPriorityChg(id, priority)),\n    taskStateChg: (id, status) => dispatch(taskStateChg(id, status)),\n    colDelete: (id) => dispatch(colDelete(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React, {useEffect} from 'react';\nimport '../App.css';\nimport TaskCreateForm from \"./TaskCreateForm\";\nimport Board from \"./Board\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from 'react-redux';\nimport {getColumns} from \"../redux/actions\";\n\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.getColumns()\n    },[])\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n\n                <h2>Kanban Board</h2>\n                <TaskCreateForm/>\n                <hr/>\n\n                <div className=\"row\">\n                    {props.columnStatus.map(el => <Board\n                        key={el._id}\n                        colId={el._id}\n                        columnStatus={el.title}\n                    />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    columnStatus: state.boardStatus,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getColumns: () => dispatch(getColumns()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    tasks: [],\n    //boardStatus: ['To Do', 'In Progress', 'Review', 'Done'],\n    boardStatus: [],\n    columns: [],\n};\n\nconst task = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'GET_TASKS' :\n            return {\n                ...state,\n                tasks: action.payload\n            }\n\n        case 'TASK_CREATE':\n            return {\n                ...state,\n                tasks: [...state.tasks, ...action.payload]\n            };\n\n        case 'TASK_DELETE':\n\n            return {\n                ...state,\n                tasks: action.payload\n            };\n\n        case 'TASK_EDIT':\n            return {\n                ...state,\n                tasks: [...state.tasks, action.payload]\n            }\n\n        case 'GET_COLUMNS':\n            // const updatedBoardStatus = [...state.boardStatus];\n            // updatedBoardStatus.push(action.payload);\n            return {\n                ...state,\n                boardStatus: action.payload\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default task;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport task from './reducers';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(task, composeWithDevTools(\n    applyMiddleware(thunk),\n));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}