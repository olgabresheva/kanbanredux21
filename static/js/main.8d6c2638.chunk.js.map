{"version":3,"sources":["redux/actions.js","components/TaskCreateForm.js","components/Task.js","components/Board.js","components/App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["getTasks","dispatch","axios","url","method","then","res","type","payload","data","catch","error","console","log","connect","onTaskCreate","taskName","taskDescription","priority","name","description","props","useEffect","useState","setTaskName","setTaskDescription","setPriority","addBtnDisabled","setAddBtnDisabled","formOpen","setFormOpen","className","onClick","placeholder","value","onChange","e","target","required","disabled","preventDefault","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","leftBtn","rightBtn","downBtn","upBtn","editBtn","Task","editMode","setEditMode","taskNewName","setTaskNewName","taskNewDescr","setTaskNewDescr","show","setShow","handleClose","taskDelete","id","onPriorityChg","direction","p","taskPriorityChg","onStateChg","state","boardState","indexOf","taskStateChg","1","2","3","lines","more","less","Modal","onHide","Body","Footer","Button","taskEdit","taskList","tasks","boardStatus","newName","newDescription","status","filter","el","sort","a","b","map","key","_id","index","Boolean","window","location","hostname","match","initialState","task","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8d6c2638.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport function getTasks() {\n    return (dispatch) => {\n        axios({\n            url: 'https://kanban-app-trial.herokuapp.com/card',\n            method: 'GET'\n        })\n            .then(res => {\n                dispatch({\n                    type: 'GET_TASKS', payload: res.data\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function onTaskCreate(name, description, priority) {\n    return (dispatch) => {\n        axios({\n            url: 'https://kanban-app-trial.herokuapp.com/card',\n            method: 'POST',\n            data: {name, description, priority}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function taskDelete(id) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'DELETE'\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}\n\nexport function taskEdit(id, newName, newDescription) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {name: newName, description: newDescription}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function taskPriorityChg(id, priority) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {priority: priority}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n\nexport function taskStateChg(id, state) {\n    return (dispatch) => {\n        axios({\n            url: `https://kanban-app-trial.herokuapp.com/card/${id}`,\n            method: 'PATCH',\n            data: {status: state}\n        })\n            .then(res => {\n                dispatch(getTasks())\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport {getTasks, onTaskCreate} from '../redux/actions';\n\nfunction TaskCreateForm(props) {\n\n    useEffect(() => {\n        getTasks()\n    }, []);\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [priority, setPriority] = useState('Select Priority');\n    const [addBtnDisabled, setAddBtnDisabled] = useState(true);\n    const [formOpen, setFormOpen] = useState(false);\n\n\n    const taskPriorityInput = (e) => {\n        setPriority(e.target.value);\n        if (priority !== '0') {\n            setAddBtnDisabled(false)\n        } else setAddBtnDisabled(true);\n    }\n\n\n    const taskCreate = (e) => {\n        e.preventDefault();\n        props.onTaskCreate(taskName, taskDescription, priority);\n        setFormOpen(false);\n        setTaskName('');\n        setTaskDescription('');\n        setAddBtnDisabled(true)\n    }\n\n    const onTaskCreateCancel = () => {\n        setTaskName('');\n        setTaskDescription('');\n        setPriority('Select Priority');\n        setAddBtnDisabled(true);\n        setFormOpen(false);\n    }\n\n\n    return (\n        <div className=\"TaskCreateForm\">\n\n            <button type=\"submit\" className=\"btn btn-info create\" onClick={() => setFormOpen(true)}>Create New Task\n            </button>\n            <p/>\n\n            {formOpen &&\n            <form>\n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <input type=\"text\" className=\"form-control\" placeholder={'Enter Take Name'} value={taskName}\n                                   onChange={e => setTaskName(e.target.value)}/>\n                        </div>\n                        <div className=\"col\">\n                            <input type=\"text\" className=\"form-control\" placeholder={'Enter Task Description'}\n                                   value={taskDescription}\n                                   onChange={e => setTaskDescription(e.target.value)}/>\n                        </div>\n                    </div>\n                    <p/>\n                    <select className=\"custom-select\" onChange={taskPriorityInput} required>\n                        <option value=\"0\">Select Priority</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                    </select>\n                    <p/>\n                    <button disabled={addBtnDisabled} type=\"submit\" className=\"btn btn-info\"\n                            onClick={taskCreate}>Add Task\n                    </button>\n                    <button type=\"button\" className=\"btn btn-secondary\"\n                            onClick={onTaskCreateCancel}>Cancel\n                    </button>\n                </div>\n            </form>\n            }\n\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    //onTaskCreate : (newTask, priority) => dispatch ({type: 'TASK_CREATE', payload: {newTask, priority}})\n    getTasks: () => dispatch(getTasks()),\n    onTaskCreate: (taskName, taskDescription, priority) => dispatch(onTaskCreate(taskName, taskDescription, priority))\n})\n\nexport default connect(null, mapDispatchToProps)(TaskCreateForm);\n","import React, {useState} from 'react';\nimport '../App.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ShowMoreText from 'react-show-more-text';\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst leftBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-left-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\n    </svg>);\n\nconst rightBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\n    </svg>);\n\n\nconst downBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n</svg>);\n\nconst upBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-up\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n</svg>);\n\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nfunction Task(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [taskNewName, setTaskNewName] = useState(props.name);\n    const [taskNewDescr, setTaskNewDescr] = useState(props.description);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        props.taskDelete(props.id);\n        setShow(false);\n    }\n\n    const onTaskSave = () => {\n        props.taskEdit(props.id, taskNewName, taskNewDescr);\n        setEditMode(false);\n    }\n\n    const onPriorityChg = (id, direction) => {\n        let p;\n        direction === 'up' ? p = props.priority - 1 : p = props.priority + 1\n        props.taskPriorityChg(id, p)\n    }\n\n    const onStateChg = (id, direction) => {\n        let state;\n        if (direction === 'right') {\n            state = props.boardState[props.boardState.indexOf(props.state) + 1]\n        } else state = props.boardState[props.boardState.indexOf(props.state) - 1]\n        props.taskStateChg(id, state)\n    }\n\n    const priorityBadge = {\n        1: \"badge badge-danger\",\n        2: \"badge badge-warning\",\n        3: \"badge badge-success\"\n    };\n\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                <span className=\"priority\">\n                    {props.priority < 3 &&\n                    <span onClick={() => onPriorityChg(props.id, 'down')}>{downBtn}</span>}\n                    {props.priority > 1 &&\n                    <span onClick={() => onPriorityChg(props.id, 'up')}>{upBtn}</span>}\n                </span>\n                    <span className={priorityBadge[props.priority]}>Priority: {props.priority}</span>\n\n                </div>\n                <div className=\"card-body\">\n                    <h6 className=\"card-title\">{props.name}:</h6>\n                    <ShowMoreText className=\"card-title small\"\n                                  lines={1}\n                                  more='Show more'\n                                  less='Show less'>\n                        {props.description}</ShowMoreText>\n\n                </div>\n                <div className=\"card-footer bg-transparent text-muted border-0\">\n                <span className=\"float-left\">\n                <span onClick={() => setEditMode(true)}>{editBtn}</span>\n                    <span onClick={() => setShow(true)}>{deleteBtn}</span>\n                    </span>\n                    {editMode &&\n                    <>\n                        <Modal show={editMode} onHide={handleClose}>\n                            <Modal.Body>\n                                <p><strong>Task Name:</strong></p>\n                                <input className=\"mytext\" type=\"text\" value={taskNewName}\n                                       onChange={e => setTaskNewName(e.target.value)}/><br/>\n                                <p/>\n                                <p><strong>Task Description:</strong></p>\n                                <input className=\"mytext\" type=\"text\" value={taskNewDescr}\n                                       onChange={e => setTaskNewDescr(e.target.value)}/><br/>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\"\n                                        onClick={() => setEditMode(false)}>Cancel</Button>\n                                <Button type=\"button\" className=\"btn btn-primary btn-sm\"\n                                        onClick={onTaskSave}>Save</Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </>}\n                    {show &&\n                    <>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Body>Please confirm if you want to delete this task</Modal.Body>\n                            <Modal.Footer>\n                                <Button type=\"button\" className=\"btn btn-secondary btn-sm\"\n                                        onClick={() => setShow(false)}>Cancel</Button>\n                                <Button type=\"button\" className=\"btn btn-primary btn-sm\"\n                                        onClick={handleClose}>Confirm</Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </>\n                    }\n                    <span className=\"float-right\">\n                {(props.state !== 'To Do' && props.state !== 'Done') &&\n                <span onClick={() => onStateChg(props.id, \"left\")}>{leftBtn}</span>}\n                        {props.state !== 'Done' &&\n                        <span onClick={() => onStateChg(props.id, \"right\")}>{rightBtn}</span>}\n                </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Task;\n","import React, {useEffect} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport Task from './Task';\nimport {getTasks, taskDelete, taskEdit, taskPriorityChg, taskStateChg} from '../redux/actions';\n\nfunction Board(props) {\n\n    useEffect(() => {\n        props.getTasks()\n    },[]);\n\n\n    return (\n        <span className=\"col-sm\">\n            <div className=\"card-header\">\n                {props.boardStatus}\n            </div>\n            <p/>\n\n            {props.taskList.filter(el => el.status === props.boardStatus)\n                .sort(function (a, b) {\n                    return a.priority - b.priority\n                })\n                .map(el => <li key={el._id}>\n                <Task name={el.name}\n                      description={el.description}\n                      priority={el.priority}\n                      state={el.status}\n                      id={el._id}\n                      boardState={props.boardState}\n                      taskDelete={props.taskDelete}\n                      taskStateChg={props.taskStateChg}\n                      taskPriorityChg={props.taskPriorityChg}\n                      taskEdit={props.taskEdit}/>\n            </li>)}\n        </span>\n\n    );\n}\n\nconst mapStateToProps = state => ({\n    taskList: state.tasks,\n    boardState: state.boardStatus,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getTasks: () => dispatch(getTasks()),\n    taskDelete: (id) => dispatch(taskDelete(id)),\n    taskEdit: (id, newName, newDescription) => dispatch(taskEdit(id, newName, newDescription)),\n    taskPriorityChg: (id, priority) => dispatch(taskPriorityChg(id, priority)),\n    taskStateChg: (id, state) => dispatch(taskStateChg(id, state)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport '../App.css';\nimport TaskCreateForm from \"./TaskCreateForm\";\nimport Board from \"./Board\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from 'react-redux';\n\nfunction App(props) {\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n\n                <h2>Kanban Board</h2>\n                <TaskCreateForm/>\n                <hr/>\n\n                <div className=\"row\">\n                    {props.boardStatus.map((el, index) => <Board\n                        key={index}\n                        boardStatus={el}\n                    />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    boardStatus: state.boardStatus,\n})\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n    tasks: [],\n    boardStatus: ['To Do', 'In Progress', 'Review', 'Done'],\n};\n\nconst task = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'GET_TASKS' :\n            return {\n                ...state,\n                tasks: action.payload\n            }\n\n        case 'TASK_CREATE':\n            return {\n                ...state,\n                tasks: [...state.tasks, ...action.payload]\n            };\n\n        case 'TASK_DELETE':\n\n            return {\n                ...state,\n                tasks: action.payload\n            };\n\n        case 'TASK_EDIT':\n            return {\n                ...state,\n                tasks: [...state.tasks, action.payload]\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default task;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport task from './reducers';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(task, composeWithDevTools(\n    applyMiddleware(thunk),\n));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}